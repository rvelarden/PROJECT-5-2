{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Segment, Message } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      console.log(\"attempting to log in\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application.json\"\n        },\n        body: JSON.stringify({\n          username: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"response from the server\", data);\n\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //successful log in\n          // localStorage.setItem(\"token\", data.token)\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleLoginSubmit,\n        size: \"mini\",\n        loading: this.props.authenticatingUser,\n        error: this.props.failedLogin,\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          header: this.props.failedLogin ? this.props.error : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            className: \"input-text\",\n            label: \"email\",\n            placeholder: \"email\",\n            name: \"email\",\n            onChange: this.handleChange,\n            value: this.state.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            className: \"input-text\",\n            type: \"password\",\n            label: \"password\",\n            placeholder: \"password\",\n            name: \"password\",\n            onChange: this.handleChange,\n            value: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, \"mini\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(LoginForm); // import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n// class LoginForm extends React.Component {\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n//     export default LoginForm\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js"],"names":["React","withRouter","Button","Form","Segment","Message","LoginForm","Component","state","email","password","handleChange","e","name","value","setState","handleLoginSubmit","console","log","fetch","method","headers","body","JSON","stringify","username","then","res","json","data","error_message","alert","props","updateCurrentUser","user_data","render","authenticatingUser","failedLogin","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Segment, Message } from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  handleLoginSubmit = () => {\n    console.log(\"attempting to log in\")\n    fetch(\"http://localhost:3000/login\", {\n      method:\"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application.json\"\n      },\n      body: JSON.stringify({\n        username: this.state.email,\n        password: this.state.password\n      })\n    }).then(res => res.json())\n    .then(data => {\n      console.log(\"response from the server\", data)\n      if(data.error_message){\n        alert(data.error_message)\n      }else{\n        //successful log in\n        // localStorage.setItem(\"token\", data.token)\n        this.props.updateCurrentUser(data.user_data)\n      }\n    })\n  };\n\n  render() {\n    return (\n      <Segment>\n        <Form \n          onSubmit={this.handleLoginSubmit}\n          size=\"mini\"\n          key=\"mini\"\n          loading={this.props.authenticatingUser}\n          error={this.props.failedLogin}\n        >\n          <Message\n            error\n            header={this.props.failedLogin ? this.props.error : null}\n          />\n          <Form.Group widths=\"equal\">\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n            <Form.Input\n            className=\"input-text\"\n              label=\"email\"\n              placeholder=\"email\"\n              name=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n            <br></br>\n            <Form.Input\n            className=\"input-text\"\n              type=\"password\"\n              label=\"password\"\n              placeholder=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n            <br></br>\n          </Form.Group>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n\n\n\n\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n\n// class LoginForm extends React.Component {\n\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n       \n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n    \n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n\n\n\n//     export default LoginForm"]},"metadata":{},"sourceType":"module"}