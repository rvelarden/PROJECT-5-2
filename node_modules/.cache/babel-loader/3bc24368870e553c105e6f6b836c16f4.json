{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js\";\n// import React from \"react\";\n// import { withRouter } from \"react-router\";\n// import { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () =>\n/*#__PURE__*/\n// class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n//     })\n//   }\n_jsxDEV(Grid, {\n  textAlign: \"center\",\n  style: {\n    height: '100vh'\n  },\n  verticalAlign: \"middle\",\n  children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: \"/logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" Log-in to your account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        stacked: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          icon: \"user\",\n          iconPosition: \"left\",\n          placeholder: \"E-mail address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          icon: \"lock\",\n          iconPosition: \"left\",\n          placeholder: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"teal\",\n          fluid: true,\n          size: \"large\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      children: [\"New to us? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this);\n\n_c = LoginForm;\nexport default LoginForm; // class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n//     })\n//   }\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n//     );\n//   }\n// }\n// export default withRouter(LoginForm);\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n// class LoginForm extends React.Component {\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n//     export default LoginForm\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js"],"names":["React","Button","Form","Grid","Header","Image","Message","Segment","LoginForm","height","maxWidth"],"mappings":";AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,QAAoE,mBAApE;;;AAEA,MAAMC,SAAS,GAAG;AAAA;AAElB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEE,QAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAhC;AAAqD,EAAA,aAAa,EAAC,QAAnE;AAAA,yBACE,QAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAApB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,OAAO,MAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,YAAY,EAAC,MAA3C;AAAkD,UAAA,WAAW,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,YAAY,EAAC,MAHf;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,IAAI,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAoBE,QAAC,OAAD;AAAA,6CACa;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADb;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAtCF;;KAAMF,S;AAkEN,eAAeA,SAAfsourcesContent":["// import React from \"react\";\n// import { withRouter } from \"react-router\";\n// import { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\n\nimport React from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\nconst LoginForm = () => (\n\n// class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n        \n//     })\n//   }\n\n  <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as='h2' color='teal' textAlign='center'>\n        <Image src='/logo.png' /> Log-in to your account\n      </Header>\n      <Form size='large'>\n        <Segment stacked>\n          <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n          />\n\n          <Button color='teal' fluid size='large'>\n            Login\n          </Button>\n        </Segment>\n      </Form>\n      <Message>\n        New to us? <a href='#'>Sign Up</a>\n      </Message>\n    </Grid.Column>\n  </Grid>\n)\n\nexport default LoginForm\n\n// class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n        \n//     })\n//   }\n\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n       \n//     );\n//   }\n// }\n\n// export default withRouter(LoginForm);\n\n\n\n\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n\n// class LoginForm extends React.Component {\n\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n       \n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n    \n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n\n\n\n//     export default LoginForm"]},"metadata":{},"sourceType":"module"}