{"ast":null,"code":"import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\"; // class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n//     })\n//   }\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n//     );\n//   }\n// }\n// export default withRouter(LoginForm);\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n// class LoginForm extends React.Component {\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n//     export default LoginForm","map":{"version":3,"sources":["/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js"],"names":["React","withRouter","Button","Form","Grid","Header","Image","Message","Segment"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,QAAoE,mBAApsourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\n\n// class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n        \n//     })\n//   }\n\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n       \n//     );\n//   }\n// }\n\n// export default withRouter(LoginForm);\n\n\n\n\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n\n// class LoginForm extends React.Component {\n\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n       \n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n    \n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n\n\n\n//     export default LoginForm"]},"metadata":{},"sourceType":"module"}