{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js\";\n// import React from \"react\";\n// import { withRouter } from \"react-router\";\n// import { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'; // const LoginForm = () => (\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      console.log(\"attempting to log in\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //succesful log in\n          localStorage.setItem(\"token\", data.token);\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          children: \"Log-in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          color: \"teal\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              objectFit: \"cover\"\n            },\n            src: \"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              icon: \"user\",\n              iconPosition: \"left\",\n              placeholder: \"E-mail address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              icon: \"lock\",\n              iconPosition: \"left\",\n              placeholder: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"teal\",\n              fluid: true,\n              size: \"small\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default LoginForm; // class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n//     })\n//   }\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n//     );\n//   }\n// }\n// export default withRouter(LoginForm);\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n// class LoginForm extends React.Component {\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n//     export default LoginForm","map":{"version":3,"sources":["/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js"],"names":["React","Button","Form","Grid","Header","Image","Message","Segment","LoginForm","Component","state","email","password","handleChange","e","name","value","setState","handleLoginSubmit","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","error_message","alert","localStorage","setItem","token","props","updateCurrentUser","user_data","render","height","maxWidth","width","objectFit"],"mappings":"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enC,SAAfsourcesContent":["// import React from \"react\";\n// import { withRouter } from \"react-router\";\n// import { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\n\nimport React from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\n// const LoginForm = () => (\n\nclass LoginForm extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  handleLoginSubmit = () => {\n    console.log(\"attempting to log in\")\n    fetch(\"http://localhost:3000/login\", {\n      method:\"POST\",\n      headers: {\n        \"Content-Type\" : \"application/json\",\n        \"Accept\" : \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    }).then(res => res.json())\n    .then(data => {\n       if(data.error_message){\n        alert(data.error_message)\n            }else{\n                //succesful log in\n            localStorage.setItem(\"token\", data.token)\n            this.props.updateCurrentUser(data.user_data)\n        }\n        \n    })\n  }\n  render() {\n        return (\n  <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Message>\n      Log-in to your account\n      </Message>\n      <Header as='h2' color='teal' textAlign='center'>\n        <Image style={{ width: \"150px\", height: \"150px\", objectFit: \"cover\" }} src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\" />\n      </Header>\n      <Form size='large'>\n        <Segment stacked>\n          <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n          />\n\n          <Button color='teal' fluid size='small'>\n            Login\n          </Button>\n        </Segment>\n      </Form>\n    </Grid.Column>\n  </Grid>\n          )\n        }\n      } \n\nexport default LoginForm\n\n// class LoginForm extends React.Component {\n//   state = {\n//     email: \"\",\n//     password: \"\"\n//   };\n\n//   handleChange = (e, { name, value }) => {\n//     this.setState({ [name]: value });\n//   };\n\n//   //When form is submitted, make a fetch to \"log in the user\"\n//   handleLoginSubmit = () => {\n//     console.log(\"attempting to log in\")\n//     fetch(\"http://localhost:3000/login\", {\n//       method:\"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\",\n//         \"Accept\" : \"application/json\"\n//       },\n//       body: JSON.stringify({\n//         email: this.state.email,\n//         password: this.state.password\n//       })\n//     }).then(res => res.json())\n//     .then(data => {\n//        if(data.error_message){\n//         alert(data.error_message)\n//             }else{\n//                 //succesful log in\n//             localStorage.setItem(\"token\", data.token)\n//             this.props.updateCurrentUser(data.user_data)\n//         }\n        \n//     })\n//   }\n\n//   render() {\n//     return (\n//         <Segment className='loginform'>\n\n//         <Image  className=\"logo\" title=\"DroneShip\" src=\"https://thumbs.dreamstime.com/t/vector-drone-prohibited-sign-illustration-colorful-flat-design-no-zone-quadcopter-red-background-70448549.jpg\"></Image>\n//         <Form className='grabloginform'\n//           onSubmit={this.handleLoginSubmit}\n//           size=\"mini\"\n//           key=\"mini\"\n//           loading={this.props.authenticatingUser}\n//           error={this.props.failedLogin}\n//         >\n//           <Message\n//             error\n//             header={this.props.failedLogin ? this.props.error : null}\n//           />\n//           <Form.Group widths=\"equal\">\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//           <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               label=\"email\"\n//               placeholder=\"email\"\n//               name=\"email\"\n//               onChange={this.handleChange}\n//               value={this.state.email}\n//             />\n//             <br></br>\n//             <Form.Input\n//             className=\"input-text\"\n//               type=\"password\"\n//               label=\"password\"\n//               placeholder=\"password\"\n//               name=\"password\"\n//               onChange={this.handleChange}\n//               value={this.state.password}\n//             />\n//             <br></br>\n//           </Form.Group>\n//           <Button type=\"submit\">Login</Button>\n//       </Form>\n//     </Segment>\n       \n//     );\n//   }\n// }\n\n// export default withRouter(LoginForm);\n\n\n\n\n// import React from 'react';\n// import { withRouter } from 'react-router'\n// import {Button, Form, Segment, Message} from 'semantic-ui-react'\n\n// class LoginForm extends React.Component {\n\n//     state = {\n//         name: '',\n//         password: ''\n//     }\n       \n//         handleChange = (e, { name, value }) => {\n//             this.setState({ [name]: value })\n//         }\n//         handleLoginSubmit = ()=>{\n//             fetch('http://localhost:3000/login',{\n//                 method: 'POST',\n//                 headers: {\"Content-Type\":\"application/json\",\n//                 \"Accept\" : \"aplication.json\"\n//             },\n//             body: JSON.stringify({\n//                 name: this.state.name,\n//                 password: this.state.password\n//             })\n//         }).then(res => res.json())\n//         .then(userData => {\n//             if(userData.error_message){\n//                 alert(userData.error_message)\n//             }else{\n//             this.props.updateCurrentUser(userData)\n//             }\n//         })\n//     }\n    \n//     render() {\n//         return (\n//           <Segment>\n//             <Form\n//               onSubmit={this.handleLoginSubmit}\n//               size=\"mini\"\n//               key=\"mini\"\n//               loading={this.props.authenticatingUser}\n//               error={this.props.failedLogin}\n//             >\n//               <Message\n//                 error\n//                 header={this.props.failedLogin ? this.props.error : null}\n//               />\n//               <Form.Group widths=\"equal\">\n//                 <Form.Input\n//                   label=\"username\"\n//                   placeholder=\"username\"\n//                   name=\"username\"\n//                   onChange={this.handleChange}\n//                   value={this.state.username}\n//                 />\n//                 <Form.Input\n//                   type=\"password\"\n//                   label=\"password\"\n//                   placeholder=\"password\"\n//                   name=\"password\"\n//                   onChange={this.handleChange}\n//                   value={this.state.password}\n//                 />\n//               </Form.Group>\n//               <Button type=\"submit\">Login</Button>\n//             </Form>\n//           </Segment>\n//         );\n//       }\n//     }\n\n\n\n//     export default LoginForm"]},"metadata":{},"sourceType":"module"}