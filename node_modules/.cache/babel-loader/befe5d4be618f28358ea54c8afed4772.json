{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button, Form, Segment, Message } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      password: ''\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Acept\": \"aplication.json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(userData => {\n        if (userData.error_message) {\n          alert(userData.error_message);\n        } else {\n          this.props.updateCurrentUser(userData);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleLoginSubmit,\n        size: \"mini\",\n        loading: this.props.authenticatingUser,\n        error: this.props.failedLogin,\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          header: this.props.failedLogin ? this.props.error : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"username\",\n            placeholder: \"username\",\n            name: \"username\",\n            onChange: this.handleChange,\n            value: this.state.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            type: \"password\",\n            label: \"password\",\n            placeholder: \"password\",\n            name: \"password\",\n            onChange: this.handleChange,\n            value: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, \"mini\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js"],"names":["React","withRouter","Button","Form","Segment","Message","LoginForm","Component","state","name","password","handleChange","e","value","setState","handleLoginSubmit","fetch","method","headers","body","JSON","stringify","then","res","json","userData","error_message","alert","props","updateCurrentUser","render","authenticatingUser","failedLogin","error","username"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router'\nimport {Button, Form, Segment, Message} from 'semantic-ui-react'\n\nclass LoginForm extends React.Component {\n\n    state = {\n        name: '',\n        password: ''\n    }\n       \n        handleChange = (e, { name, value }) => {\n            this.setState({ [name]: value })\n        }\n        handleLoginSubmit = ()=>{\n            fetch('http://localhost:3000/login',{\n                method: 'POST',\n                headers: {\"Content-Type\":\"application/json\",\n                \"Acept\" : \"aplication.json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                password: this.state.password\n            })\n        }).then(res => res.json())\n        .then(userData => {\n            if(userData.error_message){\n                alert(userData.error_message)\n            }else{\n            this.props.updateCurrentUser(userData)\n            }\n        })\n    }\n    \n    render() {\n        return (\n          <Segment>\n            <Form\n              onSubmit={this.handleLoginSubmit}\n              size=\"mini\"\n              key=\"mini\"\n              loading={this.props.authenticatingUser}\n              error={this.props.failedLogin}\n            >\n              <Message\n                error\n                header={this.props.failedLogin ? this.props.error : null}\n              />\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  label=\"username\"\n                  placeholder=\"username\"\n                  name=\"username\"\n                  onChange={this.handleChange}\n                  value={this.state.username}\n                />\n                <Form.Input\n                  type=\"password\"\n                  label=\"password\"\n                  placeholder=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  value={this.state.password}\n                />\n              </Form.Group>\n              <Button type=\"submit\">Login</Button>\n            </Form>\n          </Segment>\n        );\n      }\n    }\n\n\n\n    export default LoginForm"]},"metadata":{},"sourceType":"module"}