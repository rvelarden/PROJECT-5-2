{"ast":null,"code":"var _jsxFileName = \"/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button, Form, Segment, Message } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      password: ''\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Acept\": \"aplication.json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(userData => {\n        if (userData.error_message) {\n          alert(userData.error_message);\n        } else {\n          this.props.updateCurrentUser(userData);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSumit: this.handleLoginSubmit,\n        size: \"mini\",\n        loading: this.props.authenticatingUser,\n        error: this.props.failedLogin\n      }, 'mini', false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/rominavelarde/Documents/Flatiron/react-test-project/Drone-app/drone-frontend/src/components/LoginForm.js"],"names":["React","withRouter","Button","Form","Segment","Message","LoginForm","Component","state","name","password","handleChange","e","value","setState","handleLoginSubmit","fetch","method","headers","body","JSON","stringify","then","res","json","userData","error_message","alert","props","updateCurrentUser","render","authenticatingUser","failedLogin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,OAA/B,QAA6C,mBAA7C;;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAF4B;;AAAA,SAOhCC,YAPgC,GAOjB,CAACC,CAAD,EAAI;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,KAAJ,KAAwB;AACnC,WAAKC,QAAL,CAAc;AAAE,SAACL,IAAD,GAAQI;AAAV,OAAd;AACH,KAT+B;;AAAA,SAUhCE,iBAVgC,GAUZ,MAAI;AACpBC,MAAAA,KAAK,CAAC,6BAAD,EAA+B;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AAAC,0BAAe,kBAAhB;AACT,mBAAU;AADD,SAFuB;AAKpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBZ,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADA;AAEjBC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFJ,SAAf;AAL8B,OAA/B,CAAL,CASDY,IATC,CASIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATX,EAUHF,IAVG,CAUEG,QAAQ,IAAI;AACd,YAAGA,QAAQ,CAACC,aAAZ,EAA0B;AACtBC,UAAAA,KAAK,CAACF,QAAQ,CAACC,aAAV,CAAL;AACH,SAFD,MAEK;AACL,eAAKE,KAAL,CAAWC,iBAAX,CAA6BJ,QAA7B;AACC;AACJ,OAhBG;AAiBP,KA5BmC;AAAA;;AA8BpCK,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAA,6BACL,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKf,iBAApB;AAAuC,QAAA,IAAI,EAAC,MAA5C;AAEA,QAAA,OAAO,EAAE,KAAKa,KAAL,CAAWG,kBAFpB;AAGA,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI;AAHlB,SACI,MADJ;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YADJ;AAUC;;AAzC+B;;AA8CpC,eAAe1B,SAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router'\nimport {Button, Form, Segment, Message} from 'semantic-ui-react'\n\nclass LoginForm extends React.Component {\n\n    state = {\n        name: '',\n        password: ''\n    }\n       \n        handleChange = (e, { name, value }) => {\n            this.setState({ [name]: value })\n        }\n        handleLoginSubmit = ()=>{\n            fetch('http://localhost:3000/login',{\n                method: 'POST',\n                headers: {\"Content-Type\":\"application/json\",\n                \"Acept\" : \"aplication.json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name,\n                password: this.state.password\n            })\n        }).then(res => res.json())\n        .then(userData => {\n            if(userData.error_message){\n                alert(userData.error_message)\n            }else{\n            this.props.updateCurrentUser(userData)\n            }\n        })\n    }\n    \n    render() {\n        return(\n            <Segment>\n       <Form onSumit={this.handleLoginSubmit} size='mini'\n       key='mini'\n       loading={this.props.authenticatingUser}\n       error={this.props.failedLogin}>\n           \n       </Form>\n       </Segment>\n            );\n        }\n    }\n\n\n\n    export default LoginForm"]},"metadata":{},"sourceType":"module"}